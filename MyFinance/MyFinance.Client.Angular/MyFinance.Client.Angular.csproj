<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.13" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.5.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\budget-detail.component.ts" />
    <None Remove="ClientApp\src\app\budget-form.component.ts" />
    <None Remove="ClientApp\src\app\budget-list.component.ts" />
    <None Remove="ClientApp\src\app\components\authentication\auth-callback.component.ts" />
    <None Remove="ClientApp\src\app\directives\bold.directive.ts" />
    <None Remove="ClientApp\src\app\guards\auth.guard.ts" />
    <None Remove="ClientApp\src\app\interceptors\auth.interceptor.ts" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Remove="ClientApp\src\app\app-about.component.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\app-home.component.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\components\budget\budget-create.component.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\components\budget\budget-detail.component.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\components\budget\budget-edit.component.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\components\budget\budgets.component.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\services\auth.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <None Update="ClientApp\src\app\app - Copy %282%29.component.js.map">
      <DependentUpon>app.component.js.map</DependentUpon>
    </None>
    <None Update="ClientApp\src\app\app - Copy - Copy.component.js.map">
      <DependentUpon>app - Copy.component.js.map</DependentUpon>
    </None>
    <None Update="ClientApp\src\app\app - Copy.component.js.map">
      <DependentUpon>app.component.js.map</DependentUpon>
    </None>
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Update="ClientApp\src\app\about.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Update="ClientApp\src\app\budget.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Update="ClientApp\src\app\components\budget\budget-form.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Update="ClientApp\src\app\components\budget\budget-list.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Update="ClientApp\src\app\item-details.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Update="ClientApp\src\app\item-stat.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Update="ClientApp\src\app\item.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Update="ClientApp\src\app\not-found.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
